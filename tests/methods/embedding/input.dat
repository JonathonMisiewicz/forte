import forte

def set_wfn_mod(wfn_sys, wfn_mod):
    Ca_sys = wfn_sys.Ca()
    Ca_mod = wfn_mod.Ca()
    Ca_sys.copy(Ca_mod)

    Fa_sys = wfn_sys.Fa()
    Fa_mod = wfn_mod.Fa()
    Fa_sys.copy(Fa_mod)

    Da_sys = wfn_sys.Da()
    Da_mod = wfn_mod.Da()
    Da_sys.copy(Da_mod)

    H_sys = wfn_sys.H()
    H_mod = wfn_mod.H()
    H_sys.copy(H_mod)

    S_sys = wfn_sys.S()
    S_mod = wfn_mod.S()
    S_sys.copy(S_mod)



molecule water_dimer{
     0 1
     O  -1.551007  -0.114520   0.000000
     H  -1.934259   0.762503   0.000000
     H  -0.599677   0.040712   0.000000
     --
     0 1
     O   1.350625   0.111469   0.000000
     H   1.680398  -0.373741  -0.758561
     H   1.680398  -0.373741   0.758561

     units angstrom
     no_reorient
     symmetry c1
}

molecule water_sys{
     0 1
     O  -1.551007  -0.114520   0.000000
     H  -1.934259   0.762503   0.000000
     H  -0.599677   0.040712   0.000000
     units angstrom
     no_reorient
     symmetry c1
}

#****** Calculate environment method ******
activate(water_dimer)
set {
  basis         sto-3g
  scf_type      pk
  e_convergence 10
}

E, ori_wfn = energy('scf', return_wfn=True)

# ****** Calculate cheap system method ******
# ****** Create embedded system wfn ******
set forte {
  job_type Embedding
  SYS_DOCC 5
  LOCALIZATION_METHOD IAO_IBO
  SYSTEM_MATRIX ALL
  C_SIZE ALL
  MATRIX_BASIS AO
}

E_test, wfn_mod = energy('forte', ref_wfn=ori_wfn, return_wfn=True)

activate(water_sys)
E_sys_ref, wfn_sys = energy('scf', return_wfn=True)

# ****** Set modified(embedded) matrices ******
set_wfn_mod(wfn_sys, wfn_mod)

set forte {
  job_type ownscf
#  INTEGRAL_METHOD mints
}

E_cheap_sys, ref_wfn_ownscf = energy('forte', ref_wfn=wfn_sys, return_wfn=True)

set forte {
  job_type             active-dsrgpt2
  frozen_docc          [0]
  rotate_mos           [1,1,5]
  restricted_docc      [4]
  active               [3]
  dsrg_s               0.5
  cas_type             cas
  fcimo_actv_type      full
  nrootpi              [4]
  d_convergence        10
}

E_exp_sys, wfn_fin = energy('forte', ref_wfn=ref_wfn_ownscf, return_wfn=True)

# ****** Calculate expensive system method ******
# ****** Create embedded system wfn ******
activate(water_dimer)
set {
  basis         sto-3g
  scf_type      pk
  e_convergence 10
  d_convergence 10
}

E, ori_wfn_2 = energy('scf', return_wfn=True)

set forte {
  job_type Embedding
  rotate_mos []
  SYS_DOCC 5
  LOCALIZATION_METHOD IAO_IBO
  SYSTEM_MATRIX ALL
  C_SIZE ALL
  MATRIX_BASIS IAO_IBO
}

E_test, wfn_mod_iao = energy('forte', ref_wfn=ori_wfn_2, return_wfn=True)

# ****** Set modified(embedded) matrices ******
activate(water_sys)

set {
  basis         sto-3g
  scf_type      pk
  e_convergence 10
  d_convergence 10
}

E_sys_ref_2, wfn_sys_2 = energy('scf', return_wfn=True)
set_wfn_mod(wfn_sys_2, wfn_mod_iao)

set forte {
  job_type             active-dsrgpt2
  frozen_docc          [0]
  rotate_mos           [1,1,5]
  restricted_docc      [4]
  active               [3]
  dsrg_s               0.5
  cas_type             cas
  fcimo_actv_type      full
  nrootpi              [4]
  d_convergence        10
}

E_exp_sys, wfn_fin = energy('forte', ref_wfn=wfn_sys_2, return_wfn=True)
